%%% ======================================================================
%   Purpose: 
%   This function creates a text file with shifted depths,  equilibrium 
%   temperatures, equilibrium relative to bottom water, and final
%   calculated thermal conductivity
%%% ======================================================================

function PrintBullardResults(ResFileId, ...
    Iteration, ...
    Trial, ...
    PulseData, ...
    TChange, ...
    SensorsToUse, ...
    ShiftedRelativeDepths, ...
    MinimumFricEqTemp, ...
    BottomWaterTemp, ...
    MinimumFricError, ...
    Currentk, ...
    HeatFlow)

Id = ResFileId;

NC = 79;
TChange = sum(TChange);

% Organize Bullard Analysis results
% ----------------------------
SensorsUsed     = SensorsToUse';
Depths = ShiftedRelativeDepths(SensorsToUse)';
EqTempsRelBW = MinimumFricEqTemp(SensorsToUse);
BottomWaterTemp = BottomWaterTemp(1,SensorsToUse)';
EqTemps = EqTempsRelBW + BottomWaterTemp;
FricTempError = MinimumFricError(SensorsUsed);
FinalCalculatedk = Currentk(SensorsToUse)';
               
BullardResults = [SensorsUsed Depths EqTempsRelBW BottomWaterTemp ...
    EqTemps FricTempError FinalCalculatedk]';

    if PulseData
        
        String = ['RESULTS OF BULLARD ANALYSIS - TRIAL # ' int2str(Trial)];
        fprintf(Id,'%s\n',[repmat(' ',1,fix((NC-length(String))/2)) ...
                repmat('-',1,length(String))]);
        fprintf(Id,'%s\n',[repmat(' ',1,fix((NC-length(String))/2)) String]);
        fprintf(Id,'%s\n\n',[repmat(' ',1,fix((NC-length(String))/2)) ...
                repmat('-',1,length(String))]);
        
    else
        String = ['RESULTS OF BULLARD ANALYSIS - NO HEAT PULSE - TRIAL # ' int2str(Trial)];
        fprintf(Id,'%s\n',[repmat(' ',1,fix((NC-length(String))/2)) ...
                repmat('-',1,length(String))]);
        fprintf(Id,'%s\n',[repmat(' ',1,fix((NC-length(String))/2)) String]);
        fprintf(Id,'%s\n\n',[repmat(' ',1,fix((NC-length(String))/2)) ...
                repmat('-',1,length(String))]);
        
    end

fprintf(Id,'\n%s',['Heat Flow: ' num2str(HeatFlow, '%02d') ...
    ' -  Iteration ' num2str(Iteration,'%02d')]);
if Iteration > 2
    fprintf(Id,'%s',[' - Total change in Temperature: ' num2str(TChange,'%+4.1e')]);
    fprintf(Id,'\n%s\n\n', ...
        '=======================================================================');
else
    fprintf(Id,'\n%s\n\n', ...
        '==============================='); 
end

fprintf(Id,'%s\n', ...
    'Sensor  Depth     Equilibrium          Bottom Water    Equilibrium   Temp. Error   Therm. Con.');
fprintf(Id,'%s\n', ...
    '                  Temp. Relative to    Temp. (째C)      Temp.(째C)     (95%)         (W/m째C)');
fprintf(Id,'%s\n', ...
    '                  Bottom Water (째C)                       ');
fprintf(Id,'%s\n\n', ...
    '------  --------  -------------------  ------------    ------------  -----------   -----------');
fprintf(Id, ...
    '%4d    %4.2f      %4.2f                 %4.2f            %4.2f          %4.2d      %4.2f\n',BullardResults);

if ~PulseData
  fprintf(Id,'\n%s\n\n', ...
    '------------------------------------------------------------------------------------------------');
end